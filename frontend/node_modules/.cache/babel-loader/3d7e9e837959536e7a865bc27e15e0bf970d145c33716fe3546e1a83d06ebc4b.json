{"ast":null,"code":"const LAST_SEARCH_KEY = 'lastSearch';\nconst SEARCH_HISTORY_KEY = 'searchHistory';\nexport const saveLastSearch = query => {\n  try {\n    localStorage.setItem(LAST_SEARCH_KEY, JSON.stringify(query));\n\n    // Also add to search history\n    const history = getSearchHistory();\n    const newEntry = {\n      query,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to beginning and keep only last 5 searches\n    const updatedHistory = [newEntry, ...history.filter(h => !(h.query.street === query.street && h.query.houseNumber === query.houseNumber && h.query.city === query.city && h.query.postalCode === query.postalCode))].slice(0, 5);\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(updatedHistory));\n  } catch (error) {\n    console.error('Error saving search to session:', error);\n  }\n};\nexport const getLastSearch = () => {\n  try {\n    const saved = localStorage.getItem(LAST_SEARCH_KEY);\n    return saved ? JSON.parse(saved) : null;\n  } catch (error) {\n    console.error('Error loading last search:', error);\n    return null;\n  }\n};\nexport const getSearchHistory = () => {\n  try {\n    const saved = localStorage.getItem(SEARCH_HISTORY_KEY);\n    return saved ? JSON.parse(saved) : [];\n  } catch (error) {\n    console.error('Error loading search history:', error);\n    return [];\n  }\n};\nexport const clearSearchHistory = () => {\n  try {\n    localStorage.removeItem(SEARCH_HISTORY_KEY);\n    localStorage.removeItem(LAST_SEARCH_KEY);\n  } catch (error) {\n    console.error('Error clearing search history:', error);\n  }\n};","map":{"version":3,"names":["LAST_SEARCH_KEY","SEARCH_HISTORY_KEY","saveLastSearch","query","localStorage","setItem","JSON","stringify","history","getSearchHistory","newEntry","timestamp","Date","toISOString","updatedHistory","filter","h","street","houseNumber","city","postalCode","slice","error","console","getLastSearch","saved","getItem","parse","clearSearchHistory","removeItem"],"sources":["C:/Users/sahoo/OneDrive/Desktop/internet-provider-comparison/backend/Check24-Gendev-Challenge-2025/frontend/src/services/sessionService.ts"],"sourcesContent":["import { SearchQuery } from './api';\r\n\r\nconst LAST_SEARCH_KEY = 'lastSearch';\r\nconst SEARCH_HISTORY_KEY = 'searchHistory';\r\n\r\nexport interface SearchHistory {\r\n  query: SearchQuery;\r\n  timestamp: string;\r\n}\r\n\r\nexport const saveLastSearch = (query: SearchQuery): void => {\r\n  try {\r\n    localStorage.setItem(LAST_SEARCH_KEY, JSON.stringify(query));\r\n    \r\n    // Also add to search history\r\n    const history = getSearchHistory();\r\n    const newEntry: SearchHistory = {\r\n      query,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    // Add to beginning and keep only last 5 searches\r\n    const updatedHistory = [newEntry, ...history.filter(h => \r\n      !(h.query.street === query.street && \r\n        h.query.houseNumber === query.houseNumber && \r\n        h.query.city === query.city && \r\n        h.query.postalCode === query.postalCode)\r\n    )].slice(0, 5);\r\n    \r\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(updatedHistory));\r\n  } catch (error) {\r\n    console.error('Error saving search to session:', error);\r\n  }\r\n};\r\n\r\nexport const getLastSearch = (): SearchQuery | null => {\r\n  try {\r\n    const saved = localStorage.getItem(LAST_SEARCH_KEY);\r\n    return saved ? JSON.parse(saved) : null;\r\n  } catch (error) {\r\n    console.error('Error loading last search:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getSearchHistory = (): SearchHistory[] => {\r\n  try {\r\n    const saved = localStorage.getItem(SEARCH_HISTORY_KEY);\r\n    return saved ? JSON.parse(saved) : [];\r\n  } catch (error) {\r\n    console.error('Error loading search history:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const clearSearchHistory = (): void => {\r\n  try {\r\n    localStorage.removeItem(SEARCH_HISTORY_KEY);\r\n    localStorage.removeItem(LAST_SEARCH_KEY);\r\n  } catch (error) {\r\n    console.error('Error clearing search history:', error);\r\n  }\r\n};\r\n"],"mappings":"AAEA,MAAMA,eAAe,GAAG,YAAY;AACpC,MAAMC,kBAAkB,GAAG,eAAe;AAO1C,OAAO,MAAMC,cAAc,GAAIC,KAAkB,IAAW;EAC1D,IAAI;IACFC,YAAY,CAACC,OAAO,CAACL,eAAe,EAAEM,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;;IAE5D;IACA,MAAMK,OAAO,GAAGC,gBAAgB,CAAC,CAAC;IAClC,MAAMC,QAAuB,GAAG;MAC9BP,KAAK;MACLQ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAG,CAACJ,QAAQ,EAAE,GAAGF,OAAO,CAACO,MAAM,CAACC,CAAC,IACnD,EAAEA,CAAC,CAACb,KAAK,CAACc,MAAM,KAAKd,KAAK,CAACc,MAAM,IAC/BD,CAAC,CAACb,KAAK,CAACe,WAAW,KAAKf,KAAK,CAACe,WAAW,IACzCF,CAAC,CAACb,KAAK,CAACgB,IAAI,KAAKhB,KAAK,CAACgB,IAAI,IAC3BH,CAAC,CAACb,KAAK,CAACiB,UAAU,KAAKjB,KAAK,CAACiB,UAAU,CAC3C,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAEdjB,YAAY,CAACC,OAAO,CAACJ,kBAAkB,EAAEK,IAAI,CAACC,SAAS,CAACO,cAAc,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAGA,CAAA,KAA0B;EACrD,IAAI;IACF,MAAMC,KAAK,GAAGrB,YAAY,CAACsB,OAAO,CAAC1B,eAAe,CAAC;IACnD,OAAOyB,KAAK,GAAGnB,IAAI,CAACqB,KAAK,CAACF,KAAK,CAAC,GAAG,IAAI;EACzC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMb,gBAAgB,GAAGA,CAAA,KAAuB;EACrD,IAAI;IACF,MAAMgB,KAAK,GAAGrB,YAAY,CAACsB,OAAO,CAACzB,kBAAkB,CAAC;IACtD,OAAOwB,KAAK,GAAGnB,IAAI,CAACqB,KAAK,CAACF,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAGA,CAAA,KAAY;EAC5C,IAAI;IACFxB,YAAY,CAACyB,UAAU,CAAC5B,kBAAkB,CAAC;IAC3CG,YAAY,CAACyB,UAAU,CAAC7B,eAAe,CAAC;EAC1C,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}