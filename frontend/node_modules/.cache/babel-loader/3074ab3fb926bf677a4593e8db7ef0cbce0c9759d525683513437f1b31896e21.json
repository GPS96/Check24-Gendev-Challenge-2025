{"ast":null,"code":"const LAST_SEARCH_KEY='lastSearch';const SEARCH_HISTORY_KEY='searchHistory';export const saveLastSearch=query=>{try{localStorage.setItem(LAST_SEARCH_KEY,JSON.stringify(query));// Also add to search history\nconst history=getSearchHistory();const newEntry={query,timestamp:new Date().toISOString()};// Add to beginning and keep only last 5 searches\nconst updatedHistory=[newEntry,...history.filter(h=>!(h.query.street===query.street&&h.query.houseNumber===query.houseNumber&&h.query.city===query.city&&h.query.postalCode===query.postalCode))].slice(0,5);localStorage.setItem(SEARCH_HISTORY_KEY,JSON.stringify(updatedHistory));}catch(error){console.error('Error saving search to session:',error);}};export const getLastSearch=()=>{try{const saved=localStorage.getItem(LAST_SEARCH_KEY);return saved?JSON.parse(saved):null;}catch(error){console.error('Error loading last search:',error);return null;}};export const getSearchHistory=()=>{try{const saved=localStorage.getItem(SEARCH_HISTORY_KEY);return saved?JSON.parse(saved):[];}catch(error){console.error('Error loading search history:',error);return[];}};export const clearSearchHistory=()=>{try{localStorage.removeItem(SEARCH_HISTORY_KEY);localStorage.removeItem(LAST_SEARCH_KEY);}catch(error){console.error('Error clearing search history:',error);}};","map":{"version":3,"names":["LAST_SEARCH_KEY","SEARCH_HISTORY_KEY","saveLastSearch","query","localStorage","setItem","JSON","stringify","history","getSearchHistory","newEntry","timestamp","Date","toISOString","updatedHistory","filter","h","street","houseNumber","city","postalCode","slice","error","console","getLastSearch","saved","getItem","parse","clearSearchHistory","removeItem"],"sources":["C:/Users/sahoo/OneDrive/Desktop/internet-provider-comparison/backend/Check24-Gendev-Challenge-2025/frontend/src/services/sessionService.ts"],"sourcesContent":["import { SearchQuery } from './api';\r\n\r\nconst LAST_SEARCH_KEY = 'lastSearch';\r\nconst SEARCH_HISTORY_KEY = 'searchHistory';\r\n\r\nexport interface SearchHistory {\r\n  query: SearchQuery;\r\n  timestamp: string;\r\n}\r\n\r\nexport const saveLastSearch = (query: SearchQuery): void => {\r\n  try {\r\n    localStorage.setItem(LAST_SEARCH_KEY, JSON.stringify(query));\r\n    \r\n    // Also add to search history\r\n    const history = getSearchHistory();\r\n    const newEntry: SearchHistory = {\r\n      query,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    // Add to beginning and keep only last 5 searches\r\n    const updatedHistory = [newEntry, ...history.filter(h => \r\n      !(h.query.street === query.street && \r\n        h.query.houseNumber === query.houseNumber && \r\n        h.query.city === query.city && \r\n        h.query.postalCode === query.postalCode)\r\n    )].slice(0, 5);\r\n    \r\n    localStorage.setItem(SEARCH_HISTORY_KEY, JSON.stringify(updatedHistory));\r\n  } catch (error) {\r\n    console.error('Error saving search to session:', error);\r\n  }\r\n};\r\n\r\nexport const getLastSearch = (): SearchQuery | null => {\r\n  try {\r\n    const saved = localStorage.getItem(LAST_SEARCH_KEY);\r\n    return saved ? JSON.parse(saved) : null;\r\n  } catch (error) {\r\n    console.error('Error loading last search:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getSearchHistory = (): SearchHistory[] => {\r\n  try {\r\n    const saved = localStorage.getItem(SEARCH_HISTORY_KEY);\r\n    return saved ? JSON.parse(saved) : [];\r\n  } catch (error) {\r\n    console.error('Error loading search history:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const clearSearchHistory = (): void => {\r\n  try {\r\n    localStorage.removeItem(SEARCH_HISTORY_KEY);\r\n    localStorage.removeItem(LAST_SEARCH_KEY);\r\n  } catch (error) {\r\n    console.error('Error clearing search history:', error);\r\n  }\r\n};\r\n"],"mappings":"AAEA,KAAM,CAAAA,eAAe,CAAG,YAAY,CACpC,KAAM,CAAAC,kBAAkB,CAAG,eAAe,CAO1C,MAAO,MAAM,CAAAC,cAAc,CAAIC,KAAkB,EAAW,CAC1D,GAAI,CACFC,YAAY,CAACC,OAAO,CAACL,eAAe,CAAEM,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC,CAE5D;AACA,KAAM,CAAAK,OAAO,CAAGC,gBAAgB,CAAC,CAAC,CAClC,KAAM,CAAAC,QAAuB,CAAG,CAC9BP,KAAK,CACLQ,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAG,CAACJ,QAAQ,CAAE,GAAGF,OAAO,CAACO,MAAM,CAACC,CAAC,EACnD,EAAEA,CAAC,CAACb,KAAK,CAACc,MAAM,GAAKd,KAAK,CAACc,MAAM,EAC/BD,CAAC,CAACb,KAAK,CAACe,WAAW,GAAKf,KAAK,CAACe,WAAW,EACzCF,CAAC,CAACb,KAAK,CAACgB,IAAI,GAAKhB,KAAK,CAACgB,IAAI,EAC3BH,CAAC,CAACb,KAAK,CAACiB,UAAU,GAAKjB,KAAK,CAACiB,UAAU,CAC3C,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEdjB,YAAY,CAACC,OAAO,CAACJ,kBAAkB,CAAEK,IAAI,CAACC,SAAS,CAACO,cAAc,CAAC,CAAC,CAC1E,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGA,CAAA,GAA0B,CACrD,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGrB,YAAY,CAACsB,OAAO,CAAC1B,eAAe,CAAC,CACnD,MAAO,CAAAyB,KAAK,CAAGnB,IAAI,CAACqB,KAAK,CAACF,KAAK,CAAC,CAAG,IAAI,CACzC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,KAAI,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAb,gBAAgB,CAAGA,CAAA,GAAuB,CACrD,GAAI,CACF,KAAM,CAAAgB,KAAK,CAAGrB,YAAY,CAACsB,OAAO,CAACzB,kBAAkB,CAAC,CACtD,MAAO,CAAAwB,KAAK,CAAGnB,IAAI,CAACqB,KAAK,CAACF,KAAK,CAAC,CAAG,EAAE,CACvC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,EAAE,CACX,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,kBAAkB,CAAGA,CAAA,GAAY,CAC5C,GAAI,CACFxB,YAAY,CAACyB,UAAU,CAAC5B,kBAAkB,CAAC,CAC3CG,YAAY,CAACyB,UAAU,CAAC7B,eAAe,CAAC,CAC1C,CAAE,MAAOsB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}