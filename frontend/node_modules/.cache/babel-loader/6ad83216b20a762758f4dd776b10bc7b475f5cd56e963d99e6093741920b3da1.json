{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahoo\\\\OneDrive\\\\Desktop\\\\internet-provider-comparison\\\\backend\\\\Check24-Gendev-Challenge-2025\\\\frontend\\\\src\\\\components\\\\SearchForm\\\\SearchForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { searchPostalCodes, getCityByPostalCode, getPostalCodeByCity } from '../../services/addressService';\nimport { saveLastSearch, getLastSearch, getSearchHistory } from '../../services/sessionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchForm = ({\n  onSearch,\n  isLoading\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    street: '',\n    houseNumber: '',\n    city: '',\n    postalCode: ''\n  });\n  const [validationErrors, setValidationErrors] = useState({});\n  const [showValidation, setShowValidation] = useState(false);\n\n  // ✅ FIXED: Address autocompletion states with proper typing\n  const [postalSuggestions, setPostalSuggestions] = useState([]);\n  const [citySuggestions, setCitySuggestions] = useState([]);\n  const [showPostalSuggestions, setShowPostalSuggestions] = useState(false);\n  const [showCitySuggestions, setShowCitySuggestions] = useState(false);\n\n  // Session state\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const postalInputRef = useRef(null);\n  const cityInputRef = useRef(null);\n\n  // Load last search and history on component mount\n  useEffect(() => {\n    const lastSearch = getLastSearch();\n    if (lastSearch) {\n      setFormData(lastSearch);\n    }\n    setSearchHistory(getSearchHistory());\n  }, []);\n  const validateField = (name, value) => {\n    switch (name) {\n      case 'street':\n        if (value && /^\\d{5}$/.test(value)) {\n          return 'This looks like a postal code. Street names should contain letters.';\n        }\n        if (value && /^[0-9]+$/.test(value)) {\n          return 'Street names should contain letters, not just numbers.';\n        }\n        break;\n      case 'houseNumber':\n        if (value && /^[xX]+$/.test(value)) {\n          return 'Please enter a valid house number (e.g., 123, 45A).';\n        }\n        if (value && value.length > 0 && !/^[0-9]+[a-zA-Z]?$/.test(value)) {\n          return 'House number should be numeric (e.g., 123, 45A).';\n        }\n        break;\n      case 'city':\n        if (value && /^\\d{5}$/.test(value)) {\n          return 'This looks like a postal code. Did you mean to enter a city name?';\n        }\n        if (value && /^[0-9]+$/.test(value)) {\n          return 'City names should contain letters, not just numbers.';\n        }\n        if (value && value.length > 0 && !/^[a-zA-ZäöüÄÖÜß\\s-]+$/.test(value)) {\n          return 'City names should only contain letters and spaces.';\n        }\n        break;\n      case 'postalCode':\n        if (value && value.length > 0 && !/^\\d{5}$/.test(value)) {\n          return 'German postal codes should be exactly 5 digits (e.g., 80331).';\n        }\n        if (value && /^[a-zA-Z]+$/.test(value)) {\n          return 'This looks like a city name. Postal codes should be 5 digits.';\n        }\n        break;\n    }\n    return undefined;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowValidation(true);\n    const errors = {};\n    Object.keys(formData).forEach(key => {\n      const error = validateField(key, formData[key]);\n      if (error) {\n        errors[key] = error;\n      }\n    });\n    setValidationErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      saveLastSearch(formData);\n      setSearchHistory(getSearchHistory());\n      onSearch(formData);\n    }\n  };\n\n  // ✅ FIXED: Made handleChange async to handle Promise-based suggestions\n  const handleChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // ✅ FIXED: Address autocompletion with proper async/await\n    if (name === 'postalCode' && value.length >= 2) {\n      try {\n        const suggestions = await searchPostalCodes(value);\n        setPostalSuggestions(suggestions);\n        setShowPostalSuggestions(suggestions.length > 0);\n      } catch (error) {\n        console.error('Error fetching postal suggestions:', error);\n        setShowPostalSuggestions(false);\n      }\n    } else if (name === 'postalCode') {\n      setShowPostalSuggestions(false);\n    }\n    if (name === 'city' && value.length >= 2) {\n      try {\n        const suggestions = await searchPostalCodes(value);\n        setCitySuggestions(suggestions);\n        setShowCitySuggestions(suggestions.length > 0);\n      } catch (error) {\n        console.error('Error fetching city suggestions:', error);\n        setShowCitySuggestions(false);\n      }\n    } else if (name === 'city') {\n      setShowCitySuggestions(false);\n    }\n\n    // Real-time validation\n    if (showValidation) {\n      const error = validateField(name, value);\n      setValidationErrors(prev => ({\n        ...prev,\n        [name]: error\n      }));\n    }\n  };\n  const handlePostalCodeSelect = suggestion => {\n    setFormData({\n      ...formData,\n      postalCode: suggestion.postalCode,\n      city: suggestion.city\n    });\n    setShowPostalSuggestions(false);\n  };\n  const handleCitySelect = suggestion => {\n    setFormData({\n      ...formData,\n      city: suggestion.city,\n      postalCode: suggestion.postalCode\n    });\n    setShowCitySuggestions(false);\n  };\n  const handleHistorySelect = historyItem => {\n    setFormData(historyItem.query);\n    setShowHistory(false);\n  };\n\n  // ✅ FIXED: Made handleBlur async to handle Promise-based auto-fill\n  const handleBlur = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // ✅ FIXED: Auto-fill city/postal code with proper async/await\n    if (name === 'postalCode' && value.length === 5) {\n      try {\n        const city = await getCityByPostalCode(value);\n        if (city && !formData.city) {\n          setFormData(prev => ({\n            ...prev,\n            city\n          }));\n        }\n      } catch (error) {\n        console.error('Error auto-filling city:', error);\n      }\n    }\n    if (name === 'city' && value && !formData.postalCode) {\n      try {\n        const postalCode = await getPostalCodeByCity(value);\n        if (postalCode) {\n          setFormData(prev => ({\n            ...prev,\n            postalCode\n          }));\n        }\n      } catch (error) {\n        console.error('Error auto-filling postal code:', error);\n      }\n    }\n\n    // Validation\n    const error = validateField(name, value);\n    setValidationErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n\n    // Hide suggestions after a delay to allow clicks\n    setTimeout(() => {\n      setShowPostalSuggestions(false); // Hide postal dropdown\n      setShowCitySuggestions(false); // Hide city dropdown\n      setPostalSuggestions([]); // Clear postal data\n      setCitySuggestions([]); // Clear city data\n    }, 200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6 text-blue-600\",\n      children: \"Internet Provider Comparison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), searchHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setShowHistory(!showHistory),\n        className: \"text-sm text-blue-600 hover:underline\",\n        children: [showHistory ? 'Hide' : 'Show', \" recent searches (\", searchHistory.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 bg-gray-50 rounded-md p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: searchHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleHistorySelect(item),\n            className: \"block w-full text-left text-sm p-2 hover:bg-white rounded border text-gray-700 hover:text-blue-600\",\n            children: [item.query.street, \" \", item.query.houseNumber, \", \", item.query.city, \" \", item.query.postalCode, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500 ml-2\",\n              children: new Date(item.timestamp).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            name: \"street\",\n            value: formData.street,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.street ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"Hauptstra\\xDFe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), validationErrors.street && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: validationErrors.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"houseNumber\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"House Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"houseNumber\",\n            name: \"houseNumber\",\n            value: formData.houseNumber,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.houseNumber ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"123\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), validationErrors.houseNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: validationErrors.houseNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: cityInputRef,\n            type: \"text\",\n            id: \"city\",\n            name: \"city\",\n            value: formData.city,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.city ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"M\\xFCnchen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), showCitySuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-40 overflow-y-auto shadow-lg\",\n            children: citySuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCitySelect(suggestion),\n              className: \"w-full text-left px-3 py-2 hover:bg-blue-50 focus:bg-blue-50 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: suggestion.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-xs\",\n                children: [suggestion.postalCode, \" - \", suggestion.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), validationErrors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: validationErrors.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"postalCode\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: postalInputRef,\n            type: \"text\",\n            id: \"postalCode\",\n            name: \"postalCode\",\n            value: formData.postalCode,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${validationErrors.postalCode ? 'border-red-500' : 'border-gray-300'}`,\n            placeholder: \"80331\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), showPostalSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-40 overflow-y-auto shadow-lg\",\n            children: postalSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handlePostalCodeSelect(suggestion),\n              className: \"w-full text-left px-3 py-2 hover:bg-blue-50 focus:bg-blue-50 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: [suggestion.postalCode, \" - \", suggestion.city]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-xs\",\n                children: suggestion.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), validationErrors.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: validationErrors.postalCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed font-medium\",\n        children: isLoading ? 'Searching Providers...' : 'Compare Internet Providers'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"YCoI6E2Dflx9Zsdt+f5dd+33vxU=\");\n_c = SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","searchPostalCodes","getCityByPostalCode","getPostalCodeByCity","saveLastSearch","getLastSearch","getSearchHistory","jsxDEV","_jsxDEV","SearchForm","onSearch","isLoading","_s","formData","setFormData","street","houseNumber","city","postalCode","validationErrors","setValidationErrors","showValidation","setShowValidation","postalSuggestions","setPostalSuggestions","citySuggestions","setCitySuggestions","showPostalSuggestions","setShowPostalSuggestions","showCitySuggestions","setShowCitySuggestions","searchHistory","setSearchHistory","showHistory","setShowHistory","postalInputRef","cityInputRef","lastSearch","validateField","name","value","test","length","undefined","handleSubmit","e","preventDefault","errors","Object","keys","forEach","key","error","handleChange","target","suggestions","console","prev","handlePostalCodeSelect","suggestion","handleCitySelect","handleHistorySelect","historyItem","query","handleBlur","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","item","index","Date","timestamp","toLocaleDateString","onSubmit","htmlFor","id","onChange","onBlur","required","placeholder","ref","state","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sahoo/OneDrive/Desktop/internet-provider-comparison/backend/Check24-Gendev-Challenge-2025/frontend/src/components/SearchForm/SearchForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { SearchQuery } from '../../services/api';\r\nimport { searchPostalCodes, getCityByPostalCode, getPostalCodeByCity, AddressSuggestion } from '../../services/addressService';\r\nimport { saveLastSearch, getLastSearch, getSearchHistory, SearchHistory } from '../../services/sessionService';\r\n\r\ninterface SearchFormProps {\r\n  onSearch: (query: SearchQuery) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface ValidationErrors {\r\n  street?: string;\r\n  houseNumber?: string;\r\n  city?: string;\r\n  postalCode?: string;\r\n}\r\n\r\nexport const SearchForm: React.FC<SearchFormProps> = ({ onSearch, isLoading }) => {\r\n  const [formData, setFormData] = useState<SearchQuery>({\r\n    street: '',\r\n    houseNumber: '',\r\n    city: '',\r\n    postalCode: ''\r\n  });\r\n\r\n  const [validationErrors, setValidationErrors] = useState<ValidationErrors>({});\r\n  const [showValidation, setShowValidation] = useState(false);\r\n  \r\n  // ✅ FIXED: Address autocompletion states with proper typing\r\n  const [postalSuggestions, setPostalSuggestions] = useState<AddressSuggestion[]>([]);\r\n  const [citySuggestions, setCitySuggestions] = useState<AddressSuggestion[]>([]);\r\n  const [showPostalSuggestions, setShowPostalSuggestions] = useState(false);\r\n  const [showCitySuggestions, setShowCitySuggestions] = useState(false);\r\n  \r\n  // Session state\r\n  const [searchHistory, setSearchHistory] = useState<SearchHistory[]>([]);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  \r\n  const postalInputRef = useRef<HTMLInputElement>(null);\r\n  const cityInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Load last search and history on component mount\r\n  useEffect(() => {\r\n    const lastSearch = getLastSearch();\r\n    if (lastSearch) {\r\n      setFormData(lastSearch);\r\n    }\r\n    setSearchHistory(getSearchHistory());\r\n  }, []);\r\n\r\n  const validateField = (name: string, value: string): string | undefined => {\r\n    switch (name) {\r\n      case 'street':\r\n        if (value && /^\\d{5}$/.test(value)) {\r\n          return 'This looks like a postal code. Street names should contain letters.';\r\n        }\r\n        if (value && /^[0-9]+$/.test(value)) {\r\n          return 'Street names should contain letters, not just numbers.';\r\n        }\r\n        break;\r\n\r\n      case 'houseNumber':\r\n        if (value && /^[xX]+$/.test(value)) {\r\n          return 'Please enter a valid house number (e.g., 123, 45A).';\r\n        }\r\n        if (value && value.length > 0 && !/^[0-9]+[a-zA-Z]?$/.test(value)) {\r\n          return 'House number should be numeric (e.g., 123, 45A).';\r\n        }\r\n        break;\r\n\r\n      case 'city':\r\n        if (value && /^\\d{5}$/.test(value)) {\r\n          return 'This looks like a postal code. Did you mean to enter a city name?';\r\n        }\r\n        if (value && /^[0-9]+$/.test(value)) {\r\n          return 'City names should contain letters, not just numbers.';\r\n        }\r\n        if (value && value.length > 0 && !/^[a-zA-ZäöüÄÖÜß\\s-]+$/.test(value)) {\r\n          return 'City names should only contain letters and spaces.';\r\n        }\r\n        break;\r\n\r\n      case 'postalCode':\r\n        if (value && value.length > 0 && !/^\\d{5}$/.test(value)) {\r\n          return 'German postal codes should be exactly 5 digits (e.g., 80331).';\r\n        }\r\n        if (value && /^[a-zA-Z]+$/.test(value)) {\r\n          return 'This looks like a city name. Postal codes should be 5 digits.';\r\n        }\r\n        break;\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setShowValidation(true);\r\n\r\n    const errors: ValidationErrors = {};\r\n    Object.keys(formData).forEach(key => {\r\n      const error = validateField(key, formData[key as keyof SearchQuery]);\r\n      if (error) {\r\n        errors[key as keyof ValidationErrors] = error;\r\n      }\r\n    });\r\n\r\n    setValidationErrors(errors);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      saveLastSearch(formData);\r\n      setSearchHistory(getSearchHistory());\r\n      onSearch(formData);\r\n    }\r\n  };\r\n\r\n  // ✅ FIXED: Made handleChange async to handle Promise-based suggestions\r\n  const handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n\r\n    // ✅ FIXED: Address autocompletion with proper async/await\r\n    if (name === 'postalCode' && value.length >= 2) {\r\n      try {\r\n        const suggestions = await searchPostalCodes(value);\r\n        setPostalSuggestions(suggestions);\r\n        setShowPostalSuggestions(suggestions.length > 0);\r\n      } catch (error) {\r\n        console.error('Error fetching postal suggestions:', error);\r\n        setShowPostalSuggestions(false);\r\n      }\r\n    } else if (name === 'postalCode') {\r\n      setShowPostalSuggestions(false);\r\n    }\r\n\r\n    if (name === 'city' && value.length >= 2) {\r\n      try {\r\n        const suggestions = await searchPostalCodes(value);\r\n        setCitySuggestions(suggestions);\r\n        setShowCitySuggestions(suggestions.length > 0);\r\n      } catch (error) {\r\n        console.error('Error fetching city suggestions:', error);\r\n        setShowCitySuggestions(false);\r\n      }\r\n    } else if (name === 'city') {\r\n      setShowCitySuggestions(false);\r\n    }\r\n\r\n    // Real-time validation\r\n    if (showValidation) {\r\n      const error = validateField(name, value);\r\n      setValidationErrors(prev => ({\r\n        ...prev,\r\n        [name]: error\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handlePostalCodeSelect = (suggestion: AddressSuggestion) => {\r\n    setFormData({\r\n      ...formData,\r\n      postalCode: suggestion.postalCode,\r\n      city: suggestion.city\r\n    });\r\n    setShowPostalSuggestions(false);\r\n  };\r\n\r\n  const handleCitySelect = (suggestion: AddressSuggestion) => {\r\n    setFormData({\r\n      ...formData,\r\n      city: suggestion.city,\r\n      postalCode: suggestion.postalCode\r\n    });\r\n    setShowCitySuggestions(false);\r\n  };\r\n\r\n  const handleHistorySelect = (historyItem: SearchHistory) => {\r\n    setFormData(historyItem.query);\r\n    setShowHistory(false);\r\n  };\r\n\r\n  // ✅ FIXED: Made handleBlur async to handle Promise-based auto-fill\r\n  const handleBlur = async (e: React.FocusEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // ✅ FIXED: Auto-fill city/postal code with proper async/await\r\n    if (name === 'postalCode' && value.length === 5) {\r\n      try {\r\n        const city = await getCityByPostalCode(value);\r\n        if (city && !formData.city) {\r\n          setFormData(prev => ({ ...prev, city }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error auto-filling city:', error);\r\n      }\r\n    }\r\n    \r\n    if (name === 'city' && value && !formData.postalCode) {\r\n      try {\r\n        const postalCode = await getPostalCodeByCity(value);\r\n        if (postalCode) {\r\n          setFormData(prev => ({ ...prev, postalCode }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error auto-filling postal code:', error);\r\n      }\r\n    }\r\n\r\n    // Validation\r\n    const error = validateField(name, value);\r\n    setValidationErrors(prev => ({\r\n      ...prev,\r\n      [name]: error\r\n    }));\r\n\r\n    // Hide suggestions after a delay to allow clicks\r\n    setTimeout(() => {\r\n      setShowPostalSuggestions(false);     // Hide postal dropdown\r\n      setShowCitySuggestions(false);       // Hide city dropdown\r\n      setPostalSuggestions([]);            // Clear postal data\r\n      setCitySuggestions([]);              // Clear city data\r\n    }, 200);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-6 text-blue-600\">\r\n        Internet Provider Comparison\r\n      </h1>\r\n\r\n      {/* Search History */}\r\n      {searchHistory.length > 0 && (\r\n        <div className=\"mb-4\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowHistory(!showHistory)}\r\n            className=\"text-sm text-blue-600 hover:underline\"\r\n          >\r\n            {showHistory ? 'Hide' : 'Show'} recent searches ({searchHistory.length})\r\n          </button>\r\n          \r\n          {showHistory && (\r\n            <div className=\"mt-2 bg-gray-50 rounded-md p-3\">\r\n              <div className=\"space-y-2\">\r\n                {searchHistory.map((item, index) => (\r\n                  <button\r\n                    key={index}\r\n                    type=\"button\"\r\n                    onClick={() => handleHistorySelect(item)}\r\n                    className=\"block w-full text-left text-sm p-2 hover:bg-white rounded border text-gray-700 hover:text-blue-600\"\r\n                  >\r\n                    {item.query.street} {item.query.houseNumber}, {item.query.city} {item.query.postalCode}\r\n                    <span className=\"text-xs text-gray-500 ml-2\">\r\n                      {new Date(item.timestamp).toLocaleDateString()}\r\n                    </span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label htmlFor=\"street\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Street\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"street\"\r\n              name=\"street\"\r\n              value={formData.street}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              required\r\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                validationErrors.street ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Hauptstraße\"\r\n            />\r\n            {validationErrors.street && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{validationErrors.street}</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"houseNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              House Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"houseNumber\"\r\n              name=\"houseNumber\"\r\n              value={formData.houseNumber}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              required\r\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                validationErrors.houseNumber ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"123\"\r\n            />\r\n            {validationErrors.houseNumber && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{validationErrors.houseNumber}</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"relative\">\r\n            <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              City\r\n            </label>\r\n            <input\r\n              ref={cityInputRef}\r\n              type=\"text\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              value={formData.city}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              required\r\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                validationErrors.city ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"München\"\r\n            />\r\n            \r\n            {/* City Suggestions */}\r\n            {showCitySuggestions && (\r\n              <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-40 overflow-y-auto shadow-lg\">\r\n                {citySuggestions.map((suggestion, index) => (\r\n                  <button\r\n                    key={index}\r\n                    type=\"button\"\r\n                    onClick={() => handleCitySelect(suggestion)}\r\n                    className=\"w-full text-left px-3 py-2 hover:bg-blue-50 focus:bg-blue-50 text-sm\"\r\n                  >\r\n                    <div className=\"font-medium\">{suggestion.city}</div>\r\n                    <div className=\"text-gray-500 text-xs\">{suggestion.postalCode} - {suggestion.state}</div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {validationErrors.city && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{validationErrors.city}</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"relative\">\r\n            <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Postal Code\r\n            </label>\r\n            <input\r\n              ref={postalInputRef}\r\n              type=\"text\"\r\n              id=\"postalCode\"\r\n              name=\"postalCode\"\r\n              value={formData.postalCode}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              required\r\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                validationErrors.postalCode ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"80331\"\r\n            />\r\n            \r\n            {/* Postal Code Suggestions */}\r\n            {showPostalSuggestions && (\r\n              <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-40 overflow-y-auto shadow-lg\">\r\n                {postalSuggestions.map((suggestion, index) => (\r\n                  <button\r\n                    key={index}\r\n                    type=\"button\"\r\n                    onClick={() => handlePostalCodeSelect(suggestion)}\r\n                    className=\"w-full text-left px-3 py-2 hover:bg-blue-50 focus:bg-blue-50 text-sm\"\r\n                  >\r\n                    <div className=\"font-medium\">{suggestion.postalCode} - {suggestion.city}</div>\r\n                    <div className=\"text-gray-500 text-xs\">{suggestion.state}</div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {validationErrors.postalCode && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{validationErrors.postalCode}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed font-medium\"\r\n        >\r\n          {isLoading ? 'Searching Providers...' : 'Compare Internet Providers'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}